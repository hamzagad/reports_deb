name: deb-package-build

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*' 

permissions:
  contents: write

jobs: 
  build:
    env:
      PACKAGE_NAME: issabel-reports

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set tag name
        id: set_tag
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: comnoco/create-release-action@v2.0.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}

      - name: Build Debian package with build-deb-action
        id: build_deb
        run: |
          export spec_version=$(grep 'Version:' issabel-reports.spec | awk '{print $2}')
          export spec_release=$(grep 'Release:' issabel-reports.spec | awk '{print $2}')
          sed -i "s/VERSION_NUMBER/${spec_version}/g" DEBIAN/vars
          sed -i "s/RELEASE_NUMBER/${spec_release}/g" DEBIAN/vars
          echo "full_version=${spec_version}-${spec_release}" >> $GITHUB_ENV
          rm -rf issabel-reports.spec
          mkdir -p .debpkg/usr/share/${{ env.PACKAGE_NAME }}
          mv DEBIAN/vars .debpkg/usr/share/${{ env.PACKAGE_NAME }}/vars
          mv DEBIAN/ .debpkg/
          mv menu.xml setup/menu.xml
          mv setup/ .debpkg/
          mv modules/ .debpkg/
      - uses: jiro4989/build-deb-action@v3
        with:
          package: ${{ env.PACKAGE_NAME }}
          package_root: .debpkg
          maintainer: Issabel Foundation <https://github.com/IssabelFoundation>
          version: ${{ env.full_version }}
          arch: 'all'
          # depends: 'fonts-open-sans, fonts-liberation, php-jpgraph, issabel-framework (>= 5.0.0-1)'
          depends: 'fonts-open-sans, fonts-liberation, php-jpgraph'
          desc: 'Issabel Reporting Modules for CDR, Billing, etc'

      - name: Upload Debian package as artifact
        run: |
          filename=$(ls -l | grep ${{ env.PACKAGE_NAME }} | awk '{print $NF}')
          echo "artifact_filename=$filename" >> $GITHUB_ENV
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact_filename }}
          path: ${{ env.artifact_filename }}
          retention-days: 90